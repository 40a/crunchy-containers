= Openshift Dedicated Examples - Crunchy Containers for PostgreSQL
Crunchy Data Solutions, Inc.
v1.3, {docdate}
:title-logo-image: image:crunchy_logo.png["CrunchyData Logo",align="center",scaledwidth="80%"]

== Openshift Dedicated Environment

Here are instructions for running examples on an Openshift 3.4 Dedicated
environment.  For Dedicated, we have built a set of templates
that can be installed into a Dedicated instance to help automate
the creation of Crunchy Container Suite containers.

A defined set of templates are supported including:

 * master database
 * replica database
 * full database backup
 * database restore
 * pgadmin4 

Each template is described below.

There are some limitations presented by Openshift 3.4 in the way
in which we can scale up the replica databases.  Without support
for dynamic volume provisioning and stateful sets, the replica
databases can be scaled in a more manual way by creating a new
replica database using the provided template.  If you want say
3 replica databases, you would use the template 3 times to create
the 3 replicas.

When Openshift supports StatefulSets and Dynamic Provisioning, the
replica can be included within a Deployment and/or StatefulSet which
will allow for scaling to be done by manipulating the Replica Count
within the Deployment or StatefulSet.

=== Installation

Users can install the templates into their Openshift environment 
using the following commands:
....
oc login
oc project <your project name>
cd $HOME
git clone https://github.com/CrunchyData/crunchy-containers.git
export CCPROOT=$HOME/crunchy-containers
export CCP_IMAGE_TAG=centos7-9.5-1.3
cd crunchy-containers/examples/dedicated
./create-all.sh
....

=== Example Details

Each example will build a template to be later used by
users when they want to deploy a Crunchy container.

The templates are installed by running the following script
within each example directory:

....
./run.sh
....

When you run the examples, there are variable substitutions taking
place to set the image path and image tags within the Openshift
templates.  This substitution allows for better support of different
deployments and deployment environments.

=== Deploying Images to Openshift Registry

You can deploy the Crunchy built container images to the Openshift
registry by running the following script:
....
examples/dedicated/push-images.sh
....

You will first need to login to the Openshift registry to perform
this script.

The script will create the appropate image tag and push the image to the
remote registry.

As you use the templates, you can specify the images in your templates using the Openshift
registry URL as follows for the *default* Openshift project:
....
172.30.149.135:5000/default
....

=== Master Database 

Template Name is *crunchy-master*

Example is found here:
....
examples/dedicated/master
....

This template will create the following:

 * database container as the master running within a Deployment 
 * database service for the master

This example deploys a master database configuration
which uses a Persistent Volume Claim for persistence.

=== Database Backup

Template Name is *crunchy-backup*

Example is found here:
....
examples/dedicated/backup
....

This template will create the following:

 * Job which generates a backup container

This example deploys a Job which results in a Pod
created which will run the crunchy-backup container.  It
will create a backup of a database and store the backup
files in a PVC.


=== Restore Database

Template Name is *crunchy-postgres-database-restore-emptydir*

Example is found here:
....
examples/templates/master-restore
....

This template will create the following:

 * database container (emptyDir)
 * database service

This example performs a database restore using a backup archive
found in a PVC.

=== crunchy-proxy 

Template Name is *crunchy-proxy*

Example is found here:
....
examples/dedicated/crunchy-proxy
....

This template will create the following:

 * crunchy-proxy container within a Deployment
 * service for crunchy-proxy

This example deploys the pgpool container and service.  The DeploymentConfig
allows you to scale up the pgpool container.  

=== pgpool 

Template Name is *crunchy-pgpool*

Example is found here:
....
examples/dedicated/pgpool
....

This template will create the following:

 * pgpool container within a DeploymentConfig
 * service for pgpool

This example deploys the pgpool container and service.  The DeploymentConfig
allows you to scale up the pgpool container.  

=== Replica Database

Template names is *crunchy-replica*

Example is found here:
....
examples/dedicated/replica
....

These templates create the following:

 * replica database container using Persistent Volume CLaim
 * service for replica 


=== Synchronous Replica Database

Template Name is *crunchy-sync-replica*

Example is found here:
....
examples/dedicated/sync
....

This template will create the following:

 * PVC for the replica database
 * replica database container using PVC as the data volume
 * service to the replica database


This example creates a synchronous replica.

=== pgadmin4 Web User Interface

Template Name is *crunchy-pgadmin4*

Example is found here:
....
examples/dedicated/crunchy-pgadmin4
....

This template will create the following:

 * PVC for the pgadmin4 configuration files and database
 * pod containing the crunchy-pgadmin4 container
 * service for the pgadmin4 container


This example creates a pgadmin4 pod and service.  


== Legal Notices

Copyright Â© 2017 Crunchy Data Solutions, Inc.

CRUNCHY DATA SOLUTIONS, INC. PROVIDES THIS GUIDE "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.

Crunchy, Crunchy Data Solutions, Inc. and the Crunchy Hippo Logo are trademarks of Crunchy Data Solutions, Inc.

